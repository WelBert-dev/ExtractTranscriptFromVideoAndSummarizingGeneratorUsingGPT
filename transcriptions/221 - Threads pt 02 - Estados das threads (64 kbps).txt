 Para galera de hoje bem-vindos novamente para o Sumaratana Java, como sempre agradecemos e um abraço muito especial para toda essa galera que é membro do nosso canal. Nesta aula nós vamos aprender sobre os estados da thread, quando a gente trabalha na última aula nós criamos aqui duas classes e uma delas ex-tent thread e a outra implementation basicamente elas vão atingir o mesmo objetivo e aqui nós estamos criando as threads e aqui nós estamos estartando. A primeira coisa que a gente precisa saber é que você nunca pode dar dois starts, uma vez que você dá um start na thread você não pode dar um start novamente porque você vai ter uma sessão illegal thread state exception e outra coisa é entender mais ou menos como funciona essas threads, por exemplo todas as vezes que você start a meta do main você tem a thread main sendo executada. Imagine a thread main como se fosse um corredor, a thread main vai executar a linha polinha sequencial, a linha 50, a thread main vai batendo no ombro dessa thread 1 aqui, esse objeto t1, e eu vou falar, você pode startar, aí depois vai continuar, você pode startar, você pode startar, você pode startar. Não necessariamente significa que vai acontecer na sequência, porque quando você inicia uma thread o scheduler pode decidir, opa, pera aí, agora a main, antes de você ir para a linha 51, pera aí que eu vou deixar a thread 1 aqui rodar um pouquinho, mas no final das contas a thread main que é principal nunca vai entrar nesse método run, porque para entrar você teria que chamar a t1.run, não um .start, e por exemplo se você adicionar essa linha de código aqui, se tem um alinhante ali em só para você ver o current thread .catname, contra o shift f10, você vai ver aqui lá no comecinho em algum lugar, você tem a thread 0, a thread 3, a thread 2, e bem aqui você tem esse método main, então possivelmente depois dessa linha a thread main morreu, quando a thread main morreu você ainda tem as outras threads sendo executadas, lembra que o programa para quando todas as threads de usuário, que são as threads que nós criamos, elas se encerram, elas mudam de estado para estado de thread morta, então a thread main continua ocorrendo, aí se ela vai parar vai descansar ou não, o scheduler que decide, ela poderia fazer bom e acabar, ou ela faz uma aqui começa, o scheduler fala, não, a main agora você espera, tem um começa, aí depois o scheduler fala, não, agora tem um você para, aí a thread 2 continua, a thread main continua, a thread 2, aí fala, o thread main espera aí agora, aí o thread 3 começa, então assim por diante, o scheduler que decide quem vai continuar em execução, e como funciona esses estados? Os estados da thread são esses, você tem novo, runable running, esperando, waiting blocked e dead, então basicamente quando você cria o objeto que nós fizemos aqui nessa aula, você tem a thread em estado de novo, quando você dá um start, a thread passa a ser runable, então não necessariamente significa que a thread vai estar sendo executada, eu falei, isso é o scheduler, o scheduler que decide se a thread vai executar ou não vai executar, mas quando você dá um start ela está pronta ali para mudar de estado para running, e de running você pode ou voltar ser bloqueada, quer dizer, voltar para runable ou a thread pode ser bloqueada, então por exemplo você pode colocar a thread para dormir, só lembrando que uma thread não pode interferir na outra, então se uma thread está dormindo esperando a bloqueada, foi por decisão da própria thread, por exemplo, a thread pode decidir esperar um recurso e uma outra thread está decidindo se vai ter ou não, ou a thread pode falar, pera aí que eu estou dormindo aqui por 10 segundos, daqui a 10 segundos eu vou voltar a executar, mas nunca do estado blocked você voltar para running, você sempre vai voltar para runable, você pode colocar uma thread para esperar por 10 segundos, dormir e quando acabar esses 10 segundos a thread vai voltar para o estado de runable, aí de runable você pode voltar para running, mas aí no nosso caso lá da t1, t2, t3, t4, o que está acontecendo as threads não estão sendo bloqueadas, elas estão sendo executadas e muito provavelmente elas estão indo de running para runable, ou seja, quando você executa thread t1, aí a thread t1 está executando, aí você está vendo agora t2, isso significa que a t1 saiu de running, voltou para o estado de runable e quando todas as threads terminam, quando a thread termina, por exemplo, a main terminou de executar, ela fica, vai para o estado de thread num estado dead, morreu, depois que uma thread morre, a única forma de você reiniciar é criando um outro objeto completamente novo, nem tem como você reutilizar a mesma thread, quando uma thread morre, simplesmente morre, não tem mais o que você fazer, mas basicamente esses são os estados principais, ela está preparada para ser executada, está executando, volta preparada para ser executada, ou ela pode ser bloqueada e depois de ser bloqueada ou esperar, você pode mandar, ela pode não, ela vai necessariamente voltar diretamente para runable, então lá não pode ir de blocked para dead, ela precisa nem que seja para executar, só para morrer, mas ela precisa passar pelos três estados aqui, runable running, para depois chegar em dead. Bom, então era isso que eu queria falar para vocês, espero que vocês tenham gostado, vamos continuar com mais código na próxima aula, até mais!
