 Alguns pesquisadores foram mais interessados na parte das regras de negócio. Os critérios que afetam o alcance de tweets. Em resumo não teve nenhuma grande novidade bombástica além do que todo mundo mais ou menos já sabia por observação. Vamos ver dois exemplos. O blog post do desenvolvedor Steven da Vercel e o blog post do Akash Gupta. Ambos os links novamente estão na descrição abaixo. No post do Steven você vai ler que o algoritmo de ranqueamento vai determinar pesos em algumas ações em cima do seu tweet. Por exemplo um like tem peso 0.5. O retweet é mais importante tem peso 1. Se alguém clicar no tweet der reply ou like ou fica mais que dois minutos lendo vai ter peso 12 e assim por diante. Mas de onde que ele tirou essa informação. Ele coloca o link para o README no diretório Projects Home Recap dentro do repositório de Algorithm ML que é o repositório menor de Machine Learning. A contagem de Scala e Java que falei acima foi no repositório principal de Algorithm que é o maior mas tem esse outro menor que é basicamente um projetinho Python com 91 arquivos e umas 6 mil linhas de código para PyTorch que eles chamam de Heavy Ranker. O problema é que o único lugar nesse código onde esses números de peso aparecem é na documentação desse README. Olha só se eu abrir o VS Code no projeto de Algorithm ML e procurar por esse parâmetro is negative feedback v2 que tem um peso negativo 74 só aparece no README em nenhum lugar no código tem de fato esse valor. Existe um arquivo localprod.yaml que parece que configura esses parâmetros para a produção e no servidor deles pode ser que esteja mesmo esse número mas no arquivo nesse repositório não tem nada portanto eu não posso dizer que tá nem certo nem errado só que é inconclusivo. Só que se você ler o post vai achar que isso é um fato e eu tenho certeza que um monte de gente vai referenciar esse blog post e repetir a informação sem checar o que significa o Steven não é rua nem mentiu mas ele tá descrevendo informação incompleta. Mas não é só isso se for agora no post do tal gupta ele vai falar de outros parâmetros de peso por exemplo ele fala que retweets dão boost de 20 vezes e de onde que ele tira isso é do repositório principal de Algorithm no arquivo Early Bird TensorFlow Basis Similariary Engine.Scala no projeto CR Mixer. Lá tem esse trecho da função get linear ranking params e agora não é um ritme é trecho de código então deve ser confiável certo também não. Vamos procurar quem chama essa função caímos nesse trecho da função get relevance options que caso essa variável use TensorFlow ranking seja falsa daí vai chamar a função com os parâmetros que vimos antes caso contrário vai chamar essa outra função get tensorflow Basis ranking params e agora vamos ver o que ela define voltamos pro arquivo anterior e vemos que ela chama a função get linear ranking params abaixo mas muda o tipo e mais importante tem esse apply boosts pra false. O que isso significa será que então todos esses parâmetros com o nome boost aqui embaixo vão ser ignorados como offensive boost ou tweet restrange boost aí que tá não temos como saber como eu disse antes esse código é incompleto e até o presente momento não sabemos nem se 100% desse código compila não sabemos quais dependências estão faltando não sabemos como buildar e portanto não sabemos como executar esse código e nem quais caminhos dentro são realmente executados pra cada tipo de dados e configurações e mesmo se conseguirmos fazer rodar vamos voltar pra aquele ritme que eu mostrei agora a pouco da parte de machine learning com pytorch olha o que diz não podemos liberar os dados reais de treino por causa de privacidade faz sentido claro mas sem ter o mesmo material de treino ou pelo menos o mesmo modelo final não temos como reproduzir exatamente o que roda no twitter e portanto não podemos garantir que é exatamente a mesma coisa rodando em produção nos servidores deles portanto do ponto de vista de auditoria podemos confiar que sim esse código é certamente retirado do código real dentro do twitter é código demais pra falsificar não seria prático mas os detalhes do que exatamente roda lá dentro talvez a gente nunca saiba sempre é possível omitir camadas de filtros na fase de mixagem que adicionam ou removem tweets ou omitir os arquivos de configuração reais que modificam todos esses pesos e boosts não temos como realmente saber por isso cuidado com afirmações sendo feitas só além do esse código.
