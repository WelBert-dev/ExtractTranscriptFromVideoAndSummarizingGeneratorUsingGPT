Se tiver interesse em saber mais, cada um desses subprojetos tem um README também, então eu recomendo que comecem por eles. Mas como eu disse, no começo se tentar rodar Bazel-Build em qualquer diretório, ele vai reclamar da falta de um arquivo de Workspace. Então até o Twitter liberar isso, ou alguém se dar o trabalho de gerar na mão, não temos como compilar e nem de tentar rodar nada. Por isso que é meio chato, porque mesmo lendo essas coisas todas na documentação, indo pro código, não temos como testar. Basta um if que a gente passa batido e talvez alguns desses componentes nem rodem. É muito difícil saber o comportamento exato de um sistema grande desses, sem ter uma massa de dados de entrada pra ver o que realmente é cuspido na saída. De qualquer forma, do ponto de vista de organização, além da falta de arquivos pra fazer build, eu também senti muita falta de arquivos de testes automatizados. Não tem como saber se eles tiraram antes de abrir em público, se ainda vai ser liberado ou se realmente nem existem. Eu espero que existam, porque dá manutenção no sistema grande desses, sem testes seria uma grande burrice. Se eles tivessem liberado os arquivos de testes, nós teríamos uma ideia muito melhor de como esse sistema se comporta, mesmo sem poder compilar e rodar. Testes servem como se fosse uma documentação viva de um sistema, teria sido muito mais fácil confirmar tudo que analisamos. Mas no geral, minha opinião é que o código Scala parece muito bem feito, dado o contexto que se trata de um legado de mais de 10 anos. Eu esperaria algo muito mais bagunçado, muito mais macarrônico. Comparado com o código do Twitch, que eu analisei em outro vídeo quando foi vazado, eu preferiria muito mais trabalhar nesse código do que no outro. O básico está bem feito, métodos curtos, baixa complexidade ciclomática, nome e enclatura bem feita, nada de variáveis, X ou Y, que não dá pra saber do que se trata, pouca coisa hardcoded, tudo organizado em arquivos de configuração, e até que bem comentados onde precisa. Não é comum ver projetos legados com esse nível de qualidade, não é nem de longe perfeito, mas até que me surpreendeu. Obviamente, esse repositório é só um espelho incompleto do repositório de verdade, que permanece fechado dentro do Twitter sob confidencialidade. O código que foi liberado também não pode ser usado por nenhum projeto fechado, sem liberar as modificações feitas em cima desse código. É isso que a licença AGPL que eles colocaram significa, eles não querem que ninguém adicione em outro projeto e mantenha fechado.

