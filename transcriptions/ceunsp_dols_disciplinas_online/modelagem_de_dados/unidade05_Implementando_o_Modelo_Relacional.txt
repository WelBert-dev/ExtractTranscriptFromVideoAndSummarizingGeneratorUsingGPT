Olá, estudante! Vamos abordar agora os conceitos de normalização no modelo relacional e suas principais regras. Falaremos também das particularidades das formas normais e como é realizada sua implementação. Vem comigo. A normalização é um processo utilizado na avaliação e correção de estruturas de tabela para minimizar redundância de dados reduzindo a probabilidade de anomalias. O processo de normalização envolve a indicação de atributos às tabelas com base no conceito de determinação. Muitas vezes, após a normalização, vão ocorrer atualizações no modelo conceitual que foi transformado anteriormente. Relembrando os níveis de modelagem, a primeira etapa é constituída pelo modelo conceitual, seguida pelo modelo lógico e pelo físico. Então, a normalização deve ser aplicada antes da passagem para o modelo lógico, com o objetivo de identificar como vão ser realizados esses relacionamentos. A normalização funciona por meio de uma série de estágios que nós chamamos de formas normais. Os três primeiros estágios são descritos como primeira forma normal, que é a 1FN ou primeira FN, segunda forma normal ou 2FN, e terceira forma normal ou 3FN. Do ponto de vista estrutural, podemos afirmar que a segunda forma normal é melhor do que a primeira, porque ela indica um refinamento, assim como a terceira forma normal é melhor do que a segunda forma normal pelo mesmo motivo. Existem duas situações comuns em que os projetistas de banco de dados usam a normalização. A primeira delas ocorre ao projetar uma estrutura de banco de dados com base nos requisitos de negócio dos usuários finais. Nesse cenário, o projetista vai construir um modelo de dados usando o DER, ou o diagrama de entidade relacionamento. Após a conclusão desse projeto inicial, o profissional pode usar a normalização para analisar as relações que existem entre os atributos dentro de cada entidade e determinar se a estrutura pode ser melhorada por meio de uma normalização. A segunda situação do uso da normalização acontece quando os projetistas são solicitados para modificar as estruturas existentes, que podem estar na forma de arquivos simples, como planilhas ou estrutura de banco de dados mais antigas. A partir de uma análise das relações entre os atributos ou campos da estrutura, o projetista pode usar o processo de normalização para melhorar essa realização de dados existente e criar um projeto de banco apropriado. Vamos aplicar e entender o que é o conceito da primeira forma normal. Uma tabela está na primeira forma normal se todas as colunas possuírem um único valor e não existirem grupos atributos. Ou seja, se existem campos recorrentes nesses relacionamentos que foram levantados no modelo conceitual por meio das regras de negócio e dos requisitos, precisamos fazer sua retirada. Portanto, na primeira forma normal devemos seguir algumas regras. São elas. Não devem seguir colunas com dados repetidos ou similares. Cada item de dados deve ser atômico, ou seja, não possuir valores compostos. Cada linha deve ser única, isto é, possuir uma chave primária. E cada campo deve ter um nome exclusivo. Vamos ver como isso funciona? Temos neste exemplo uma tabela de cliente com o nome e vários números de telefone. Então, já nos deparamos com elementos repetitivos. Se não separarmos essa repetição, vamos ter uma limitação do número de telefones que esse cliente pode ter, o que não é real, já que o cliente pode ter n telefones. O mesmo ocorre com os vários e meios do cliente. Assim, os elementos repetitivos precisam ser retirados, ou seja, separados em outras tabelas. Então, na primeira forma normal, tudo que se repete deve ser destinado a uma entidade separada. Percebemos que existe um código para cada e meio, mas são todos do mesmo cliente. Por exemplo, temos dois do cliente 123 e um do cliente 125. Uma tabela vai ser a segunda forma normal se estiver na primeira forma normal e todos os atributos não chave dependerem da chave primária completa, ou seja, sem dependência parcial. Vamos ver um exemplo. Neste caso, nós temos uma tabela projeto, que é composta por ID do projeto e o nome do projeto. Percebemos que temos ID do projeto e o nome do empregado. O nome do empregado depende de um campo não-chave, porque o campo-chave é o ID do projeto. Portanto, devemos separar para que seja criada uma outra entidade destinada ao empregado. Assim, temos também uma tabela de cargos, dependendo do projeto e do empregado que está associado. Então, mantivemos a tabela projeto, mas criamos uma tabela associativa, que vai ser esse projeto e esse empregado trabalhando tantas horas. A terceira forma normal só pode ser aplicada se passou pela segunda forma normal. Além disso, não devem existir atributos não-chave, que dependem de outros atributos não-chave. Então, notamos que aqueles atributos que dependiam de outro campo não-chave, que era o empregado, foram separados nas tabelas empregado e as tabelas cargos. Ou seja, não vamos encontrar elementos repetitivos no banco de dados. Ao final da terceira forma normal do projeto, vamos ter criado quatro entidades que foram necessárias. A tabela empregado, a tabela cargo, a tabela projeto e a tabela associativa. De forma geral, a decomposição das tabelas até a terceira forma normal é suficiente para obtermos o esquema de um banco de dados e resolvermos os problemas. No entanto, às vezes é necessário aplicar a quarta e a quinta forma normal, de acordo com a complexidade das regras de negócio. Chamada de FNBC, ela só ocorre se cada determinante for uma chave candidata. Então, a maioria das entidades da terceira forma normal já está nesse modelo. A tabela vai estar na quarta forma normal se nenhuma instância da tabela de banco de dados contiver dois ou mais dados independentes e multivalorados descrevendo a entidade relevante. E uma tabela só vai estar na quinta forma normal se estiver na quarta e não poder ser decomposta em qualquer número de tabelas menores sem perda de dados. Deste modo, estudamos os conceitos de normalização no modelo relacional e as situações em que ela ocorre. Conhecemos ainda as regras das formas normais e procedimentos de implementação. Espero que tenha gostado do conteúdo. Bons estudos e até a próxima!